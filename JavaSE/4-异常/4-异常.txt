一、异常		

	Java中的异常都是类，用来模拟现实世界中不同类型的不正常事件，可以创建异常对象，这些对象就表示真实存在的异常事件	
	
二、异常的作用

	程序在执行过程中发现异常后，后面的代码就无法继续执行，这时JVM为我们创建一个该类型的异常对象，这个对象中包含了详细的异常信息，
	并且JVM会将这些信息输出到控制台，程序员可以通过这个信息对代码进行修改，使程序更加健壮
	
三、处理异常的两种方式

	捕捉

			try{
				可能出现异常的代码;
			}catch(异常类型1 变量){
				处理该异常的代码1;
			}catch(异常类型2 变量){
				处理该异常的代码2;
			}
		
		catch可以写多个，但是必须从小到大依次捕捉，并且最多执行一个
		同时处理多个异常时如果只写一个catch语句块，需抛出最宽泛的异常或者进一步在方法体中从小到大依次判断异常类型并进行处理
		finally语句块可以没有，也可以直接和try语句块连用，还可以在中间加上catch语句块
		finally语句块一定会执行，除非在它之前退出JVM(System.exit(0))，所以一般用于保证资源释放(另外注意finally的临时变量问题)
	
	抛出:throws是推卸责任，谁调用谁处理

四、getMessage方法只是打印异常信息，printStackTrace方法可以打印异常堆栈信息，一般使用printStackTrace方法去调试程序，因为更加明确

五、自定义异常

	一般提供两个构造方法(其中有一个是无参构造方法)，在其他类中通过判断决定是否需要抛出异常(throw)