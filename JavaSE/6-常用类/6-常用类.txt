一、String

	String是不可变类，一旦创建不可再改变(指"aaa"不能变为"bbb")，所以尽量避免字符串频繁拼接操作，这样可以防止在字符串常量池中创建大量对象
	
	字符串常量池是一个缓存区，存储在方法区中，Java中所有使用双引号括起来的字符串都会在字符串常量池中创建一份，以提高访问字符串的效率，
	如果用到某个字符串，会在字符串常量池中去搜索该字符串，有就直接拿过来用，没有则新建一个
	
	String s="abc"  比  String s=new String("abc")节省内存	
	
	PrintString.println()方法执行时会先调用String.valueOf()方法，再执行toSting方法，所以传入空引用也只是输出null，而不会报空指针异常
	
	正则表达式是一门独立的学科，是一种字符模型，专门做字符串格式匹配，是通用的，{^a{2}$}等同于aa
	
	字符串缓冲区的作用是预先在内存中申请一块空间来容纳字符序列，空间不够则自动扩容，适用于字符串频繁拼接
	尽量显示地指定初始化容量，可以减少扩容次数来减少底层数组的拷贝
	StringBuilder(非线程安全，所以效率较高)和StringBuffer(线程安全，适合在多线程环境下使用)的底层是可扩容的可变char数组，默认容量都为16

	
二、包装类

	JDK5.0的新特性-自动装箱和自动拆箱，作用在程序编译阶段，方便编码，和程序运行无关
	有m(double i)和m(Integer i)两个方法，在JDK1.4没有自动拆装箱，所以调用m(10)肯定调用是第一个方法，由于JDK向下兼容，JDK5.0之后依然调用第一个方法
	整型常量池(-128~127)类似于字符串常量池


三、数字类

	数字格式化:#任意数字，,千分位，.小数点，0不够补0
	BigDecimal精确度极高，但运算必须通过调用方法来实现，多用于财务软件

	
四、枚举

	枚举保证了元素有限
	枚举类中每个枚举值代表枚举类的一个实例对象，规范要求字母全大写，如果只有一个枚举值，可当做单例模式看待
	枚举类中的方法或变量都是静态的
	枚举类的构造方法必须是私有的
	枚举类也可以实现接口、但不能继承

	  enum Color {
		RED,GREEN,YELLOW;
	  }等同于
	  class Color{
		  private Color(){}
		  public static final Color RED = new Color();
		  public static final Color GREEN = new Color();
		  public static final Color YELLOW = new Color();
	  }的简写

	 特殊枚举的操作

		在枚举类里面如果有 有参数的构造方法，就需要在每个实例上面都写参数
		在枚举类里面如果有抽象方法，就需要每个实例都实现这个抽象方法

	  Enum类中的方法

		name
		ordinal										下标
		valueof(String name)						枚举对象
		valueOf(Class<T> enumType,String name)		枚举对象
		values										所有枚举对象